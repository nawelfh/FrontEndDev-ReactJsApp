{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\ReactJs\\\\CounterApp\\\\src\\\\designSystem\\\\Atom\\\\AtomText\\\\AtomText.js\";\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAtomText.propTypes = {\n  text: propTypes.string,\n  className: propTypes.string,\n  onClick: propTypes.any,\n  style: propTypes.object,\n  type: propTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']),\n  filter: propTypes.bool,\n  showLoading: propTypes.bool,\n  filterText: propTypes.string\n};\nAtomText.defaultProps = {\n  text: '',\n  className: null,\n  onClick: null,\n  style: null,\n  type: 'h1',\n  filter: false,\n  filterText: \"\",\n  showLoading: false\n};\n\nfunction AtomText(props) {\n  const className = [];\n\n  if (props.type.toUpperCase() === 'H1') {\n    className.push('text-h1');\n  }\n\n  if (props.type.toUpperCase() === 'H2') {\n    className.push('text-h2');\n  }\n\n  if (props.type.toUpperCase() === 'H3') {\n    className.push('text-h3');\n  }\n\n  if (props.type.toUpperCase() === 'H4') {\n    className.push('text-h4');\n  }\n\n  if (props.type.toUpperCase() === 'H5') {\n    className.push('text-h5');\n  }\n\n  if (props.type.toUpperCase() === 'H6') {\n    className.push('text-h6');\n  }\n\n  if (props.className) {\n    className.push(props.className);\n  }\n\n  function renderText() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: className.join(' '),\n      style: props.style,\n      onClick: props.onClick,\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  }\n\n  return renderText();\n}\n\n_c = AtomText;\nexport default AtomText;\n\nvar _c;\n\n$RefreshReg$(_c, \"AtomText\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/ReactJs/CounterApp/src/designSystem/Atom/AtomText/AtomText.js"],"names":["React","propTypes","AtomText","text","string","className","onClick","any","style","object","type","oneOf","filter","bool","showLoading","filterText","defaultProps","props","toUpperCase","push","renderText","join"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEAC,QAAQ,CAACD,SAAT,GAAqB;AACjBE,EAAAA,IAAI,EAAEF,SAAS,CAACG,MADC;AAEjBC,EAAAA,SAAS,EAAEJ,SAAS,CAACG,MAFJ;AAGjBE,EAAAA,OAAO,EAAEL,SAAS,CAACM,GAHF;AAIjBC,EAAAA,KAAK,EAAEP,SAAS,CAACQ,MAJA;AAKjBC,EAAAA,IAAI,EAAET,SAAS,CAACU,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CAAhB,CALW;AAMjBC,EAAAA,MAAM,EAAEX,SAAS,CAACY,IAND;AAOjBC,EAAAA,WAAW,EAAEb,SAAS,CAACY,IAPN;AAQjBE,EAAAA,UAAU,EAAEd,SAAS,CAACG;AARL,CAArB;AAUAF,QAAQ,CAACc,YAAT,GAAwB;AACpBb,EAAAA,IAAI,EAAE,EADc;AAEpBE,EAAAA,SAAS,EAAE,IAFS;AAGpBC,EAAAA,OAAO,EAAE,IAHW;AAIpBE,EAAAA,KAAK,EAAE,IAJa;AAKpBE,EAAAA,IAAI,EAAE,IALc;AAMpBE,EAAAA,MAAM,EAAE,KANY;AAOpBG,EAAAA,UAAU,EAAE,EAPQ;AAQpBD,EAAAA,WAAW,EAAE;AARO,CAAxB;;AAUA,SAASZ,QAAT,CAAkBe,KAAlB,EAAyB;AACrB,QAAMZ,SAAS,GAAG,EAAlB;;AACA,MAAIY,KAAK,CAACP,IAAN,CAAWQ,WAAX,OAA6B,IAAjC,EAAuC;AACnCb,IAAAA,SAAS,CAACc,IAAV,CAAe,SAAf;AACH;;AACD,MAAIF,KAAK,CAACP,IAAN,CAAWQ,WAAX,OAA6B,IAAjC,EAAuC;AACnCb,IAAAA,SAAS,CAACc,IAAV,CAAe,SAAf;AACH;;AACD,MAAIF,KAAK,CAACP,IAAN,CAAWQ,WAAX,OAA6B,IAAjC,EAAuC;AACnCb,IAAAA,SAAS,CAACc,IAAV,CAAe,SAAf;AACH;;AACD,MAAIF,KAAK,CAACP,IAAN,CAAWQ,WAAX,OAA6B,IAAjC,EAAuC;AACnCb,IAAAA,SAAS,CAACc,IAAV,CAAe,SAAf;AACH;;AACD,MAAIF,KAAK,CAACP,IAAN,CAAWQ,WAAX,OAA6B,IAAjC,EAAuC;AACnCb,IAAAA,SAAS,CAACc,IAAV,CAAe,SAAf;AACH;;AACD,MAAIF,KAAK,CAACP,IAAN,CAAWQ,WAAX,OAA6B,IAAjC,EAAuC;AACnCb,IAAAA,SAAS,CAACc,IAAV,CAAe,SAAf;AACH;;AACD,MAAIF,KAAK,CAACZ,SAAV,EAAqB;AACjBA,IAAAA,SAAS,CAACc,IAAV,CAAeF,KAAK,CAACZ,SAArB;AACH;;AACD,WAASe,UAAT,GAAsB;AAClB,wBAAO;AACH,MAAA,SAAS,EAAEf,SAAS,CAACgB,IAAV,CAAe,GAAf,CADR;AAEH,MAAA,KAAK,EAAEJ,KAAK,CAACT,KAFV;AAGH,MAAA,OAAO,EAAES,KAAK,CAACX,OAHZ;AAAA,gBAKFW,KAAK,CAACd;AALJ;AAAA;AAAA;AAAA;AAAA,YAAP;AAQH;;AAED,SAAOiB,UAAU,EAAjB;AACH;;KAnCQlB,Q;AAoCT,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nAtomText.propTypes = {\r\n    text: propTypes.string,\r\n    className: propTypes.string,\r\n    onClick: propTypes.any,\r\n    style: propTypes.object,\r\n    type: propTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']),\r\n    filter: propTypes.bool,\r\n    showLoading: propTypes.bool,\r\n    filterText: propTypes.string\r\n};\r\nAtomText.defaultProps = {\r\n    text: '',\r\n    className: null,\r\n    onClick: null,\r\n    style: null,\r\n    type: 'h1',\r\n    filter: false,\r\n    filterText: \"\",\r\n    showLoading: false\r\n};\r\nfunction AtomText(props) {\r\n    const className = [];\r\n    if (props.type.toUpperCase() === 'H1') {\r\n        className.push('text-h1');\r\n    }\r\n    if (props.type.toUpperCase() === 'H2') {\r\n        className.push('text-h2')\r\n    }\r\n    if (props.type.toUpperCase() === 'H3') {\r\n        className.push('text-h3')\r\n    }\r\n    if (props.type.toUpperCase() === 'H4') {\r\n        className.push('text-h4')\r\n    }\r\n    if (props.type.toUpperCase() === 'H5') {\r\n        className.push('text-h5')\r\n    }\r\n    if (props.type.toUpperCase() === 'H6') {\r\n        className.push('text-h6')\r\n    }\r\n    if (props.className) {\r\n        className.push(props.className)\r\n    }\r\n    function renderText() {\r\n        return <p\r\n            className={className.join(' ')}\r\n            style={props.style}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.text}\r\n        </p>\r\n\r\n    }\r\n\r\n    return renderText();\r\n}\r\nexport default AtomText;\r\n"]},"metadata":{},"sourceType":"module"}